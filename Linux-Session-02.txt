Day-02 
Quick recap of Day-01 

Phase-01 (Intruction to Linux or Enterprise Linux).

- What is Linux? - OPerating System 
- What is OPerating System  and it's major components?
   User, GUI, CLI, Kernel, Hardware 
- Users - root(admin user), john (normal user), apache (system user).
- Interface (User used one of the interface (GUI or CLI) for to communicate with kernel, to effectively used it's hardware) 
   - GUI - Graphical User Interface  (Linux - GNOME "GNU Object Model Environment").
     Note: Search over internet using - Linux GNOME.
   - CLI - Command Line interface (Linux - Bash, sh , tcsh , ksh , csh etc).
     Note: Bash is default shell for RHEL and it's more effective.
- Kernel - Core of operating system, it's set of libraries and bineries.
           Note: Kernel used for optimum or maximum utilization of servers/system.
- Hardware - w.=ith respect to servers (IBM/HP/DELL/CISCO etc servers like - Blade servers).

 Outcome of this discussion - RHEL version X (6/7/8/9) installed on Server, then over this OS application deployed and server will continue to serve accross zones.
 
- Linux Distribution:-
  REHL(As per this Training we consider RHEL, and it's highly used also - almost 70-90% - Bcoz of Strong vendor support).
  CentOS 
  Fedora 
   Ubuntu 
   Enterprise SUSE 
   OPen SUSE 
   Debian etc 
   
- Phase-02 (Introduction to Basic commands and concepts).

 Basic commands and concepts:-
  Command Option Argument 
  
  mkdir - Directory creation (-p option used).
  touch - file creation (Empty file)
  cd command
   - cd Directory_name  (move inside the directory/folder).
   - cd .. (come out 1 step back from current working dir).
   - cd ../.. (come out 2 steps back from current working dir).
   - cd - (move to previous directory/folder).
   - cd (just enter "cd" command take you to logged in user's home directory).
  cp - copy the file/dir from source to destination.
  cp -rv dir1 dir2 (dir1 is source, dir2 is destination).
  tree 
  pwd
  ls or ls -l (ll)
  whoami 
  mv (cut, same as copy command "cp").
  rm (rm -rf "explained)
  
 - Paths (Absolute and Relative path).
  Absolute path always start with "/" 
  And Relative path never start with "/" 
  
  NOte: It's strongly recommended to use Absolute path.
  Note: Relative path mostly used for quick work (individual purpose).

- Linux directory Structure 
  1st level - "/"
  2nd level - boot, bin, sbin, usr, home, root, run , var, tmp , dev etc 
  
  boot location (/boot)
  Everything inside "/" 

- Manual pages 
  page 1  - /bin or /usr/bin 
  page 5  - configuration file 
  page 8  - /sbin or /usr/sbin 
  
  Eg:-
  1. $ man 1 cp 
  2. $ man 5 passwd  (/etc/passwd file)
  3. $ man 8 useradd (man useradd also, it will take you to "man 8 useradd" only).
  
  
- help option 
 useradd --help 

- test editor (vim)
$ vim file_name (Press Enter)
press key "i" - insert mode.

This is my 1st line 
This is my 2nd line 
This is my 3rd line ... and continue 

press key "esc" - for lock mode 
then press 
:wq 


- cat to view the contents of file.
$ cat file_name (show all the contents of the file).

===========================================================

  User and Group management:- 
  
 Eg:- 
  User 
  GUI 
  CLI 
  Kernel 
  Hardware
  
  Users (3 types)
  1. root user 
     Admin or Administrator - In linux (all Linux) - root is the default admin account.
     NOte: ***
		- We can not create root account, at the time of installation of Linux OS, it will ask for set the password.
		- root account is also called super user account.
		- Every user associated with unique User ID (UID) and root having "0".
		- root account/user when logged in to system/server it's prompt should be with "#" sign.
		- root account/user's home directory is "/root" 
		
  2. NOrmal User 
        - Any user created by root user and that user is/are able to login then it's normal user.
	    - Normal user's UID start with "1000" in RHEL os.
	    - Normal account/user when logged in to system/server it's prompt should be with "$" sign.
		- NOrmal account/user's home directory is "/home/user-name"
		
		NOte: ***
		- Use "whoami , pwd, echo $USER etc" commands to findout the logged in user to the server.
		- NOrmal account/user can also be a admin using sudo (sudo user).


  3. System user:- 
       - When you install/deploy application/service then sometime application/service are also associated with user account, that user account is aacountable for complete management of the application/service.
	   - system user/account UID less than 1000
	   - Using system user/account you can not be able to login (ALL system user having no login shell /sbin/nologin).
	   
	   
======================
 - When you execute useradd or below command as root user.
 # useradd user-name 
 Eg:
 # useradd john 
 
 
 
 /etc/passwd 
 /etc/group 
 /etc/shadow 

 /home/user-name 
 /home/user-name/.bash* (.bashrc, .bash_profile, .bash_histry file ).
 /var/spool/mail/user-name 
 
 =======================================
 Below commands execution via root user login only.
 # useradd user_name 
 # passwd user_name 
 
 # groupadd group_name 
 
 # useradd -g group_name user_name  (adding user "user_name" to primary group "group_name")
 # useradd -G group_name user_name  (adding user "user_name" to suplimentry group "group_name")
 
 Note: 
 If you want to add multiple suplimentry group then 
 # usermod -a -G 2nd_group_name user_name
 
 # user add with comment 
 useradd -c "Test User" user-name 
 
 ###########
 Create users and Groups
     Users               Groups   (User's comment)   2nd Group
 user1 ot user5 -      unixadm    "Unix team"
 user6-user10          dba         "DBA team"
 user11 to 15          app1        "app1 team"    app2 
 user16-user20         app2        "app2 team"    app1 
 
 (userdel -r user-name)
 
 Lab SOlution:-
 # groupadd unixadm 
 # groupadd dba
 # groupadd app1 
 # groupadd app2 
 
 # useradd -g unixadm user1 
 # useradd -g unixadm user2
 and contune to user5
 
 COntune for user6-10 
 
 # useradd -g app1 -G app2 user11 
 # useradd -g app1 -G app2 user12
 # useradd -g app1 -G app2 user13
 # useradd -g app1 -G app2 user14
 # useradd -g app1 -G app2 user15
  
 Password you can use 
 passwd 
 Type passwd 
 Taype passwd again.

 or 
 echo redhat | passwd --stdin user1 
 ==================================
 cat /etc/passwd | grep user 
 cat /etc/group | egrep 'unix|dba|app'
 cat /etc/shadow | grep user 
 
 ls -l /etc/login.defs 
 
 
 ===================================
 Min password - 0 
 Maximum passwd expired - 90 days 
 Warning days 13
 acount expitred after 30 days wnen password expired
 
 cat /etc/passwd |grep user1 
 chage -l user1 
 
 chage --help 
 and verify the same 
 ==============
 Quick recap of User and Group management:-
 
 
 - useradd 
  Eg: # useradd user1 
      # useradd -g unixadm -G dba -c "Business COmment" user2 
	  (useradd --help )
	  
 - userdel   (userdel -r user_name)
  Eg: 
     # userdel -r user3
	  (userdel --help)
 - usermod 
  Eg:
     # usermod -G unixadm -c "Updated comment" user4
	 (usermod --help)
 
 - groupadd 
   Eg:
     # groupadd -g 23988 unixadm 
	 (groupadd --help).
	 
 - groupdel
    Eg: 
      # groupdel app1
      (groupdel --help) 
	  
 - groupmod 
    Eg:
      # groupmod --help 
	  
 - passwd 
 - password changes uning --stdin (echo password123 | passwd --stdin user-name).
 - chage (chage --help ).

======================================================================

###########
 Create users and Groups
     Users               Groups   (User's comment)   2nd Group
 user1 ot user5 -      unixadm    "Unix team"
 user6-user10          dbadm        "DBA team"
 user11 to 15          app1        "app1 team"    app2 
 user16-user20         app2        "app2 team"    app1 
 
 (userdel -r user-name)
 
 Lab SOlution:-
 # groupadd unixadm 
 # groupadd dbadm
 # groupadd app1 
 # groupadd app2 
 
 # useradd -g unixadm user1 
 # useradd -g unixadm user2
 and contune to user5
 
 COntune for user6-10 
 
 # useradd -g app1 -G app2 user11 
 # useradd -g app1 -G app2 user12
 # useradd -g app1 -G app2 user13
 # useradd -g app1 -G app2 user14
 # useradd -g app1 -G app2 user15
  
 Password you can use 
 passwd 
 Type passwd 
 Taype passwd again.

 or 
 echo redhat | passwd --stdin user1 
 ==================================
 cat /etc/passwd | grep user 
 cat /etc/group | egrep 'unix|dba|app'
 cat /etc/shadow | grep user 
 
 ls -l /etc/login.defs 
 
 ==========================
### Lab Solution

Step-01 - 
Group creation:-

 # groupadd unixadm 
 # groupadd dbadm 
 # groupadd app1 
 # groupadd app2 
 
Verify - Group creation:- 
 # cat /etc/group | grep unixadm 
 # cat /etc/group | grep dbadm 
 # cat /etc/group | grep app1
 # cat /etc/group | grep app2 
or 
 # cat /etc/group | grep -E 'unixadm|dbadm|app1|app2'
 

Step-02 -
User Creation:- 
 # useradd -g unixadm -c "UNIX team" user1
 # useradd -g unixadm -c "UNIX team" user2
 # useradd -g unixadm -c "UNIX team" user3
 # useradd -g unixadm -c "UNIX team" user4
 # useradd -g unixadm -c "UNIX team" user5
 
Verify - user creation:-
 # cat /etc/passwd | grep -E 'user1|user2|user3|user4|user5'
or 
 # cat /etc/passwd | grep ^user 
 
 
Step-03 
###
Setup the password 

Note: Before settting password for every user, update the required changes in "/etc/login.def" file"

 # vim /etc/login.def
 update the required changes.

 # passwd user1 (type password and verify password - two time need to type password).
 or 
 # echo password123 | passwd --stdin user1 
 # echo password123 | passwd --stdin user2
 # echo password123 | passwd --stdin user3
 # echo password123 | passwd --stdin user4
 # echo password123 | passwd --stdin user5 

 
 NOte: Continue the same for user6-10, user11-15 , user16-20.
 
 ===============================  
 Linux Permission model 
 # mkdir /Project
 # touch /permission.txt 
 # ls -l /permission.txt
 -rw-r--r-- root root 43567 /permission.txt
 
 NOte: *** 
  -rw-r--r-- (This is permission)

==========================

Create directory - "/project"
Create sub directories - /project (UNIX DB APP1 APP2)
Change the ownershift (owner and Group Owner both) 

chown   root:project /project 
chown root:unixadm /project/UNIX 
chown root:dbadm /project/DB 
chown root:app1 /project/APP1
chown root:app1 /project/APP2

chmod 770 /project
chmod 770 /project/UNIX 
chmod 770 /project/DB 
chmod 770 /project/APP1
chmod 770 /project/APP2


user1-5      - "project" group 
user6-10     - "project" group 

and verify the access.




Delete all users (user1 to user20).
===============
for x in {1..20}
do
userdel -r user$x 
done 


Delete all groups.
============
for x in unixadm dbadm app1 app2 
do
groupdel $x 
done 

Delete all directories

rm -rf /project 

























 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	   
	   
	  
		
   
   
   
   
   
   
   
   
   
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
   
   
   
   
   
   
  
   
   
   
   
   