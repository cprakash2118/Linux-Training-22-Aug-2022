
- Introduction to Enterprise Linux 
- Basic commands and Linux concepts 
- File and Directories operations.
- Users and Group Management.
- Permission model 
- Processes Management 
- Package Management.
- Disk/File-System Management.
###############

- Disk/File-System Management.

#Resources:-
  CPU
  Memeory 
  IO devices (Disk/Storage part).

# Listing disk on server.
Old/Lagacy interface to manage disk on your servers - /usr/sbin/fdisk or /usr/sbin/gdisk etc 
New interface to manage disk on your servers - /usr/sbin/parted 
Basic commands for storage.
# lsblk  or lsblk -fp
# blkid <device_name_path> 
  Eg:- blkid /dev/sda1 
  
# parted print /dev/sda 


# Parttition, File System. and persistent mount points.
 As per parttition schemes:-
1) MBR parttition schemes.
2) GPT per parttition schemes.


1) MBR partition schemes:- 
 Point-1.  As per MBR partition schemes maximum primary partitions can be create is 4.
 Note: After 4 primary partitions, no partition can be created.
 
 POint-2. As per point1 - if less than 4 (3 Primary & 1 Extended partition and Under extended partition only you can create Logical partition).
 
 Point-3. Maximim  partitions can be 15.
          3 - Primary partitions 
		  1 - Extended parttion (All the remaining/required storage can be used by extended partition, so that when extended partiton create then under that logical partitions created and partitions count can be reached upto 15th.
		  
  Point-4. MBR support maximum partition size is 2TiB

  Point-5. 1st 512 bytes for MBR called boot loader (GRub2).
   NOte: GRand Unified Bootload version 2.
   What is bootloader - Boootloader is a source code responsible to start OS.
   
 HOw to manage the partition using parted commands (/usr/sbin/parted).
 
 parted print 
 # parted -l 
 # parted /dev/sdb print  
 # parted /dev/sdb 
 
 
 /dev/sdb (Taking example for this.
 
  # parted /dev/sdb 
  (parted) "print" then press Enter key  
  
Directly creating parttions.
  
  # parted /dev/sdb mklabel msdos   (MBR)
  # parted /dev/sdb mklabel gpt     (GPT)
  
  # parted /dev/sdb 
  (parted) "mkpart" then 'Enter' key.
  Partition type? Primary/extended ? "primary" and then 'Enter' key .
  FIle system type? [ext2]
  "print"
  Start? 2048s
  End? 1025MB
  quit
  
  #udevadm settle (To update to kernel that we have done some update to partition).


point- single line how to create parttion.
# parted /dev/sdb mkpart primary xfs 2048s 100MB  


Note: ONce partition created then go for File System.
#mkfs.ext4   /dev/sdb1

Once Partititon done then mount to a system.

#mkdir /mp 
# mount /dev/sdb1 /mp   (Temp mounting).


Persistent mounting :-
blkid /dev/sdb1 

# vim /etc/fstab 

UUID-value     /mp   FS-type  defaults dump_freqency  FSCK.
											0	0
											
# systemctl daemon-reload
# lsblk   

#############
lab 
- Attach 2 GB/GIB and 3 GB/GIB are attached.
- over 2GB/GIB of disk make 4 primary partiition, each parttion 400MiB.
- Over 3GB of disk make 3 Primary of 100MIB each and 8 logical partition 100MiB (each).
- make ext4 FS to all primary partition respective to (/sda_mp1 , /sda_mp2, /sda_mp3 and /sda_m4, /sdb_m5, /sdb6_mp6
  /dev/sdb_mp7
- Makr ext2 to all logical  partition. 

Solution#
Disk 2GiB and 3Gib has been added to server.

Verify disks 

# parted -l | grep "Disk /dev/sd"
/dev/sda   2GiB
/dev/sdb   3GiB


# parted /dev/sda 
  (parted) "mklabel" then 'Enter' key.
   New disk label type? msdos   
  (parted) help
  (parted) mkpart 
  parttion type? Primary/extended?  Primary
  File System type? [ext2]? ext4 
  start? 2048s
  End? 400MB

 (parted) print
   parted) mkpart 
  parttion type? Primary/extended?  Primary
  File System type? [ext2]? ext4  
  start? 401MB
  End? 800MB

  parted) print
   parted) mkpart 
  parttion type? Primary/extended?  Primary
  File System type? [ext2]? ext4  
  start? 801MB
  End? 1200MB

  parted) print
   parted) mkpart 
  parttion type? Primary/extended?  Primary
  File System type? [ext2]? ext4  
  start? 1201MB
  End? 1600MB
  

# lsblk 
# mkfs.ext4 /dev/sda1
# mkfs.ext4 /dev/sda2
# mkfs.ext4 /dev/sda3
# mkfs.ext4 /dev/sda4

# mkdir /mp_sda01 /mp_sda02 /mp_sda03 /mp_sda04

MOunting 

# mount /dev/sda1 /mp_sda01 
Same as other (repete it).

blkid /dev/sda1 
UUID 

# vim /etc/fstab 

<Device_name>   <Mount_Point>   <FleSystem>  <option>  FSCK (FileSystemCheck)   Dump-Frequency
UUID=" "         /mp_sda1        ext4         defaults      0                        0













  
  
  
  
 
 
 
 
   
   
   
 








 

  